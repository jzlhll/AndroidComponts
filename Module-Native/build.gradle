plugins {
    alias(libs.plugins.android.library)
}


//简单移位加密。避免原始数据暴露
private static char char2char(char c) {
    char c9 = '9'
    char c0 = '0'
    char ca = 'a'
    char cz = 'z'
    char cA = 'A'
    char cZ = 'Z'

    if (c >= c0 && c <= c9) {
        if (c == c9) {
            return c0
        }
        return (char) (c + 1)
    }

    if (c >= cA && c <= cZ) {
        if (c == cZ) {
            return cA
        }
        return (char) (c + 1)
    }

    if (c >= ca && c <= cz) {
        if (c == cz) {
            return ca
        }
        return (char) (c + 1)
    }

    return c
}
private static String cvt(String s) {
    def chars = s.toCharArray()
    def sb = new StringBuilder()
    for (char c in chars) {
        sb.append(char2char(c))
    }
    return sb.toString()
}

def APP_SIGN_REL = cvt("FF:FF:FF:FF:FF:FF:FF:FF:FF:FF:FF:FF:FF:FF:FF:FF:FF:FF:FF:FF".toUpperCase())
def APP_SIGN_DEBUG = cvt("EE:EE:FF:FF:FF:FF:FF:FF:FF:FF:FF:FF:FF:FF:FF:FF:FF:FF:EE:EE".toUpperCase())
def APP_ID = cvt("abcdefghij1234567")
def APP_KEY = cvt("abcdefghijklmnopkqjjd0129347578928")

def STRING_ENCRYPT_SECRET_KEY = cvt(findProperty("string.encrypt.key"))

android {
    namespace='com.example.module_native'
    compileSdk=gradle.ext.compileSdk

    defaultConfig {
        minSdk=gradle.ext.minSdk

        consumerProguardFiles "consumer-rules.pro"
        externalNativeBuild {
            cmake {
                cppFlags ""
                // 添加多个参数
                arguments "-DANDROID_SUPPORT_FLEXIBLE_PAGE_SIZES=ON",
                        "-DAPP_SIGN_REL=$APP_SIGN_REL",
                        "-DAPP_SIGN_DEBUG=$APP_SIGN_DEBUG",
                        "-DAPP_ID=$APP_ID",
                        "-DAPP_KEY=$APP_KEY",
                        "-DSTRING_ENCRYPT_SECRET_KEY=$STRING_ENCRYPT_SECRET_KEY"
                abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
            }
        }
        ndkVersion = '27.1.12297006'
    }

    buildTypes {
        release {
            minifyEnabled=false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            // Release 模式下的配置
            externalNativeBuild {
                cmake {
                    cppFlags "-DIS_RELEASE"
                }
            }
        }
    }
    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
            version "3.22.1"
        }
    }
    compileOptions {
        sourceCompatibility=JavaVersion.VERSION_17
        targetCompatibility=JavaVersion.VERSION_17
    }
}

dependencies {
    implementation libs.androidx.core.ktx
    implementation libs.androidx.appcompat
    implementation libs.material
}